///////////////////////////////////////////////////////////////////////////////
// ADSserverServices.h

#pragma once

#include "TcServices.h"

const ULONG DrvID_ADSserver = 0x3F000000;
#define SRVNAME_ADSSERVER "ADSserver"

///<AutoGeneratedContent id="ClassIDs">
const CTCID CID_ADSserverCADS_server_module = {0x18d0faa3,0x8d84,0x4b8c,{0xaf,0x0b,0xa3,0xf2,0x04,0x95,0x16,0xec}};
const CTCID CID_ADSserverCIkusi_module = {0xbe04afbf,0x2c9e,0x4b03,{0x87,0x74,0xd2,0x4f,0x71,0x9d,0x43,0x05}};
///</AutoGeneratedContent>

///<AutoGeneratedContent id="ParameterIDs">
const PTCID PID_ADS_server_moduleDefaultAdsPort = 0x00000001;
const PTCID PID_ADS_server_moduleCounter = 0x00000003;
const PTCID PID_Ikusi_moduleParameter = 0x00000001;
///</AutoGeneratedContent>

///<AutoGeneratedContent id="DataTypes">
typedef struct _ADS_server_moduleInputs
{
	ULONG Value;
	ULONG Status;
	ULONG Data;
	USHORT Main_Drive_status_word[8];
	LONG Main_Position_feedback_1_value[8];
	LONG Main_Following_distance[8];
	LONG Main_Velocity_feedback_value_1[8];
	SHORT Main_Torque_feedback_value[8];
	USHORT Main_Motor_temperature[8];
	SHORT Main_Digital_inputs_state[8];
} ADS_server_moduleInputs, *PADS_server_moduleInputs;

typedef struct _ADS_server_moduleOutputs
{
	ULONG Value;
	ULONG Control;
	ULONG Data;
	USHORT Main_Master_control_word[8];
	LONG Main_Position_command_value[8];
	LONG Main_Velocity_command_value[8];
	SHORT Main_Torque_command_value[8];
	SHORT Main_Digital_outputs[8];
} ADS_server_moduleOutputs, *PADS_server_moduleOutputs;

typedef struct _ADS_server_moduleikusiDataIN
{
	SHORT butCdp;
	SHORT but1;
	SHORT but2;
	SHORT but3;
	SHORT but4;
	SHORT butRot;
	SHORT X;
	SHORT Y;
	SHORT Z;
	SHORT RX;
	SHORT RY;
	SHORT RZ;
} ADS_server_moduleikusiDataIN, *PADS_server_moduleikusiDataIN;

typedef struct _ADS_server_moduleCAN
{
	SHORT CAN0;
	SHORT CAN1;
	SHORT CAN2;
	SHORT CAN3;
	SHORT CAN4;
	SHORT CAN5;
	SHORT CAN6;
	SHORT CAN7;
} ADS_server_moduleCAN, *PADS_server_moduleCAN;

typedef struct _Ikusi_moduleParameter
{
	ULONG data1;
	ULONG data2;
	double data3;
} Ikusi_moduleParameter, *PIkusi_moduleParameter;

typedef struct _Ikusi_moduleInputs
{
	unsigned char DataIN[16];
	unsigned short Transmit_Accepted : 1;
	unsigned short Receive_Request : 1;
	unsigned short Init_Accepted : 1;
	unsigned short Buffer_Full : 1;
	unsigned short Parity_Error : 1;
	unsigned short Framing_Error : 1;
	unsigned short Overrun_Error : 1;
	unsigned short Input_Length : 8;
	unsigned short reserved1 : 1;
} Ikusi_moduleInputs, *PIkusi_moduleInputs;

#pragma pack(push,1)
typedef struct _Ikusi_moduleOutputs
{
	ULONG Value;
	unsigned char DataOUT[16];
	unsigned short Transmit_Request : 1;
	unsigned short Receive_Accepted : 1;
	unsigned short Init_Request : 1;
	unsigned short Send_Continuous : 1;
	unsigned short Output_Length : 8;
	unsigned short reserved1 : 4;
} Ikusi_moduleOutputs, *PIkusi_moduleOutputs;
#pragma pack(pop)

typedef struct _Ikusi_moduleikusiDataOUT
{
	SHORT butCdp;
	SHORT but1;
	SHORT but2;
	SHORT but3;
	SHORT but4;
	SHORT butRot;
	SHORT X;
	SHORT Y;
	SHORT Z;
	SHORT RX;
	SHORT RY;
	SHORT RZ;
	SHORT CAN0;
	SHORT CAN1;
	SHORT CAN2;
	SHORT CAN3;
	SHORT CAN4;
	SHORT CAN5;
	SHORT CAN6;
	SHORT CAN7;
} Ikusi_moduleikusiDataOUT, *PIkusi_moduleikusiDataOUT;

typedef struct _Ikusi_moduleCAN
{
	SHORT CAN0;
	SHORT CAN1;
	SHORT CAN2;
	SHORT CAN3;
	SHORT CAN4;
	SHORT CAN5;
	SHORT CAN6;
	SHORT CAN7;
} Ikusi_moduleCAN, *PIkusi_moduleCAN;

///</AutoGeneratedContent>



///<AutoGeneratedContent id="DataAreaIDs">
#define ADI_ADS_server_moduleInputs 0
#define ADI_ADS_server_moduleOutputs 1
#define ADI_ADS_server_moduleikusiDataIN 3
#define ADI_ADS_server_moduleCAN 4
#define ADI_Ikusi_moduleInputs 0
#define ADI_Ikusi_moduleOutputs 1
#define ADI_Ikusi_moduleikusiDataOUT 3
#define ADI_Ikusi_moduleCAN 4
///</AutoGeneratedContent>

///<AutoGeneratedContent id="InterfaceIDs">
///</AutoGeneratedContent>
